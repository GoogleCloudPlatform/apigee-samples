# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
openapi: 3.0.0
info:
  title: Customer Profile API
  description: >-
    This API manages customer profiles and contains operations to retrieve all customer 
    profiles, get a specific customer's profile by ID, create a new 
    customer profile, and update an existing customer profile.
  version: 1.0.0
  contact:
    name: Cymbal Retail
    url: https://cymbal-retail.com
  termsOfService: https://cymbal-retail/terms/
servers:
  - url: https://APIGEE_HOST/v1/samples/adk-cymbal-retail/customers
security:
  - ApiKeyAuth: []
paths:
  /:
    get:
      summary: Get a list of all customers
      operationId: getAllCustomers
      tags:
        - customers
      responses:
        '200':
          description: A list of customer profiles.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerProfile'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new customer profile
      operationId: createCustomer
      tags:
        - customers
      requestBody:
        description: Customer profile to create.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCustomerProfile'
      responses:
        '201':
          description: Customer profile created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfile'
        '400':
          description: Invalid input.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /{customerId}:
    get:
      summary: Get a customer by ID
      operationId: getCustomerById
      tags:
        - customers
      parameters:
        - name: customerId
          in: path
          description: ID of the customer to retrieve.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A single customer profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfile'
        '404':
          description: Customer not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update an existing customer profile
      operationId: updateCustomer
      tags:
        - customers
      parameters:
        - name: customerId
          in: path
          description: ID of the customer to update.
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Customer profile details to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCustomerProfile'
      responses:
        '200':
          description: Customer profile updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfile'
        '400':
          description: Invalid input.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Customer not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    CustomerProfile:
      type: object
      required:
        - id
        - firstName
        - lastName
        - email
      properties:
        id:
          type: integer
          format: int64
          description: The unique identifier for the customer.
          example: 12345
        firstName:
          type: string
          description: The customer's first name.
          example: Jane
        lastName:
          type: string
          description: The customer's last name.
          example: Doe
        email:
          type: string
          format: email
          description: The customer's email address.
          example: jane.doe@example.com
        phone:
          type: string
          description: The customer's phone number.
          example: "+1-555-555-5555"
        createdAt:
          type: string
          format: date-time
          description: The timestamp when the profile was created.
          example: "2023-01-01T10:00:00Z"
        updatedAt:
          type: string
          format: date-time
          description: The timestamp when the profile was last updated.
          example: "2023-08-25T14:30:00Z"
    NewCustomerProfile:
      type: object
      required:
        - firstName
        - lastName
        - email
      properties:
        firstName:
          type: string
          description: The customer's first name.
          example: John
        lastName:
          type: string
          description: The customer's last name.
          example: Smith
        email:
          type: string
          format: email
          description: The customer's email address.
          example: john.smith@example.com
        phone:
          type: string
          description: The customer's phone number.
          example: "+1-555-555-5555"
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: The error code.
          example: 404
        message:
          type: string
          description: A detailed error message.
          example: "Customer not found with the given ID."
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      description: API key to authorize requests.
      name: x-apikey
      in: header