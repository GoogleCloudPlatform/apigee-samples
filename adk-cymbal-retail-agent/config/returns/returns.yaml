# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
openapi: 3.0.0
info:
  title: Returns API
  description: >-
    This API manages returns. It provides endpoints for creating a return 
    request, retrieving details of a specific return, and 
    processing a refund or credit.
  version: 1.0.0
  contact:
    name: Cymbal Retail
    url: https://cymbal-retail.com
  termsOfService: https://cymbal-retail/terms/
servers:
  - url: https://APIGEE_HOST/v1/samples/adk-cymbal-retail
security:
  - ApiKeyAuth: []
paths:
  /returns:
    get:
      summary: Get a list of all return requests
      operationId: getAllReturns
      tags:
        - returns
      responses:
        '200':
          description: A list of return requests.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReturnRequest'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new return request
      operationId: createReturnRequest
      tags:
        - returns
      requestBody:
        description: Details for the new return request.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewReturnRequest'
      responses:
        '201':
          description: Return request created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnRequest'
        '400':
          description: Invalid input or order not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /returns/{returnId}:
    get:
      summary: Get details of a specific return request
      operationId: getReturnDetails
      tags:
        - returns
      parameters:
        - name: returnId
          in: path
          description: The ID of the return request.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Details of the return request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnRequest'
        '404':
          description: Return request not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update the status of a return request
      operationId: updateReturnStatus
      tags:
        - returns
      parameters:
        - name: returnId
          in: path
          description: The ID of the return request.
          required: true
          schema:
            type: string
      requestBody:
        description: New status for the return request.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReturnStatus'
      responses:
        '200':
          description: Return status updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnRequest'
        '400':
          description: Invalid status update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Return request not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /returns/{returnId}/process-refund:
    post:
      summary: Process a refund or issue a store credit
      operationId: processRefund
      tags:
        - refunds
      parameters:
        - name: returnId
          in: path
          description: The ID of the return request.
          required: true
          schema:
            type: string
      requestBody:
        description: The refund type and amount to be processed.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundProcessing'
      responses:
        '200':
          description: Refund or credit processed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundConfirmation'
        '400':
          description: Invalid request or return not in a refundable state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Return request not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    ReturnRequest:
      type: object
      required:
        - returnId
        - orderId
        - returnStatus
        - items
        - reason
        - requestedAt
      properties:
        returnId:
          type: string
          description: The unique identifier for the return request.
          example: "ret-7890"
        orderId:
          type: string
          description: The ID of the original order.
          example: "ord-12345"
        returnStatus:
          type: string
          description: The current status of the return.
          enum:
            - requested
            - received
            - inspected
            - completed
            - rejected
          example: "requested"
        items:
          type: array
          description: The list of items being returned.
          items:
            $ref: '#/components/schemas/ReturnItem'
        reason:
          type: string
          description: The reason for the return.
          example: "Incorrect size"
        notes:
          type: string
          description: Any additional notes from the customer.
          example: "The shirt was too small."
        requestedAt:
          type: string
          format: date-time
          description: The timestamp when the return was requested.
          example: "2023-09-01T10:00:00Z"
        processedAt:
          type: string
          format: date-time
          description: The timestamp when the return was completed.
          example: "2023-09-05T15:30:00Z"
    NewReturnRequest:
      type: object
      required:
        - orderId
        - items
        - reason
      properties:
        orderId:
          type: string
          description: The ID of the original order.
          example: "ord-12345"
        items:
          type: array
          description: The list of items being returned.
          items:
            $ref: '#/components/schemas/ReturnItem'
        reason:
          type: string
          description: The reason for the return.
          example: "Incorrect size"
        notes:
          type: string
          description: Any additional notes from the customer.
          example: "The shirt was too small."
    ReturnItem:
      type: object
      required:
        - productId
        - quantity
      properties:
        productId:
          type: string
          description: The ID of the product being returned.
          example: "sku-shirt-red-M"
        quantity:
          type: integer
          description: The quantity of the product being returned.
          example: 1
    UpdateReturnStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: The new status for the return request.
          enum:
            - received
            - inspected
            - rejected
            - completed
          example: "received"
    RefundProcessing:
      type: object
      required:
        - type
        - amount
      properties:
        type:
          type: string
          description: The type of refund to issue.
          enum:
            - refund
            - credit
          example: "refund"
        amount:
          type: number
          format: float
          description: The amount to be refunded or credited.
          example: 25.50
    RefundConfirmation:
      type: object
      required:
        - returnId
        - type
        - amount
        - confirmationId
        - processedAt
      properties:
        returnId:
          type: string
          description: The ID of the return request.
          example: "ret-7890"
        type:
          type: string
          description: The type of refund that was processed.
          enum:
            - refund
            - credit
          example: "refund"
        amount:
          type: number
          format: float
          description: The amount that was refunded or credited.
          example: 25.50
        confirmationId:
          type: string
          description: The unique ID of the refund transaction.
          example: "ref-987654"
        processedAt:
          type: string
          format: date-time
          description: The timestamp when the refund was processed.
          example: "2023-09-05T15:35:00Z"
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: The error code.
          example: 404
        message:
          type: string
          description: A detailed error message.
          example: "Return request not found with the given ID."
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      description: API key to authorize requests.
      name: apikey
      in: query
